version: 2.1

jobs:
  build-lambda-layer:
    docker:
      - image: amazonlinux:2  # Use Amazon Linux 2 for compatibility

    steps:
      - checkout  # Checkout repository code

      - run:
          name: Install Required Packages
          command: |
            yum install -y gcc python3 python3-devel python3-pip zip curl unzip
            python3 -m pip install --upgrade pip

      - run:
          name: Install AWS CLI
          command: |
            curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
            unzip awscliv2.zip
            ./aws/install
            export PATH=$PATH:/usr/local/bin

      - run:
          name: Verify AWS CLI Installation
          command: aws --version  # Check if AWS CLI is installed correctly

      - run:
          name: Install psycopg 3 in Layer Directory
          command: |
            mkdir -p python
            python3 -m pip install psycopg -t python  # Installing psycopg3

      - run:
          name: Package Lambda Layer
          command: zip -r psycopg3-layer.zip python

      - run:
          name: Upload Lambda Layer to AWS
          command: |
            aws lambda publish-layer-version \
              --layer-name psycopg3-layer \
              --description "Psycopg3 Lambda Layer for Amazon Linux 2" \
              --zip-file fileb://psycopg3-layer.zip \
              --compatible-runtimes python3.8 python3.9 python3.10 python3.11 \
              --region $AWS_REGION

  terraform-deploy:
    docker:
      - image: hashicorp/terraform:latest  # Use Terraform's official image

    environment:
      AWS_REGION: "us-west-2"  # Ensure the region is set

    steps:
      - checkout  # Checkout the code

      - run:
          name: Set AWS Credentials
          command: |
            export AWS_ACCESS_KEY_ID="${AWS_ACCESS_KEY_ID}"
            export AWS_SECRET_ACCESS_KEY="${AWS_SECRET_ACCESS_KEY}"
            export AWS_REGION="us-west-2"

      - run:
          name: Terraform Init
          command: terraform init

      - run:
          name: Terraform Plan
          command: terraform plan -out=tfplan

      - run:
          name: Terraform Apply
          command: terraform apply -auto-approve tfplan

workflows:
  build-and-deploy:
    jobs:
      - build-lambda-layer
      - terraform-deploy:
          requires:
            - build-lambda-layer  # Terraform runs only after Lambda Layer is built
