version: 2.1

jobs:
  build-lambda-layer:
    docker:
      - image: amazonlinux:2  # Amazon Linux 2 for AWS Lambda compatibility

    steps:
      - checkout  # Checkout repository code

      - run:
          name: Install System Dependencies
          command: |
            yum update -y
            yum install -y gcc python3 python3-devel python3-pip zip tar gzip \
                           postgresql postgresql-devel postgresql-libs \
                           libpq-devel make openssl openssl-devel

            python3 -m pip install --upgrade pip

      - run:
          name: Build psycopg3 Lambda Layer with libpq
          command: |
            # mkdir -p python/lib python/site-packages
            mkdir -p psycopg3-layer/python

            # Install psycopg3 binary version (avoids compilation issues)
            # python3 -m pip install "psycopg[binary,pool]" -t python/site-packages  
            python3 -m pip install --platform manylinux2014_x86_64 --target . --python-version 3.12 --only-binary=:all: psycopg-binary -t psycopg3-layer/python 
            # Move psycopg3 to root directory
            # mv python/site-packages/* python/

            # # Copy required PostgreSQL shared libraries
            # cp /usr/lib64/libpq.so* python/lib/
            # cp /usr/lib64/libssl.so* python/lib/
            # cp /usr/lib64/libcrypto.so* python/lib/

            # # Verify package installation
            # ls -lh python/
            # ls -lh python/lib/

      - run:
          name: Package Lambda Layer
          command: zip -r psycopg3-layer.zip psycopg3-layer/python

      - persist_to_workspace:
          root: .
          paths:
            - psycopg3-layer.zip  # Store the zip file for Terraform

  terraform-deploy:
    docker:
      - image: hashicorp/terraform:latest  # Use Terraform's official image

    environment:
      AWS_REGION: "us-west-2"  # Ensure the region is set

    steps:
      - checkout  # Checkout the code

      - attach_workspace:
          at: .

      - run:
          name: Set AWS Credentials
          command: |
            export AWS_ACCESS_KEY_ID="${AWS_ACCESS_KEY_ID}"
            export AWS_SECRET_ACCESS_KEY="${AWS_SECRET_ACCESS_KEY}"
            export AWS_REGION="us-west-2"

      - run:
          name: Terraform Init
          command: terraform init

      - run:
          name: Terraform Plan
          command: terraform plan -out=tfplan

      - run:
          name: Terraform Apply
          command: terraform apply -auto-approve tfplan

workflows:
  build-and-deploy:
    jobs:
      - build-lambda-layer
      - terraform-deploy:
          requires:
            - build-lambda-layer  # Terraform runs only after Lambda Layer is built
