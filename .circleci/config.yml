version: 2.1

jobs:
  build-pg8000-layer:
    docker:
      - image: amazonlinux:2  # Amazon Linux 2 for AWS Lambda compatibility

    steps:
      - checkout  # Checkout repository code

      - run:
          name: Install System Dependencies
          command: |
            yum update -y
            yum install -y gcc python3 python3-devel python3-pip zip tar gzip
            python3 -m pip install --upgrade pip

      - run:
          name: Build pg8000 Lambda Layer
          command: |
            mkdir -p python
            python3 -m pip install "pg8000" -t python  # ✅ Install pg8000

            # ✅ Verify structure
            ls -lh python/

      - run:
          name: Package Lambda Layer
          command: zip -r pg8000-layer.zip python

      - persist_to_workspace:
          root: .
          paths:
            - pg8000-layer.zip  # Store the zip file for Terraform

  build-psycopg-layer:
    docker:
      - image: amazonlinux:2  # Amazon Linux 2 for AWS Lambda compatibility

    steps:
      - checkout  # Checkout repository code

      - run:
          name: Install System Dependencies
          command: |
            yum update -y
            yum install -y gcc python3 python3-devel python3-pip zip tar gzip postgresql-libs postgresql-devel libpq5
            python3 -m pip install --upgrade pip

      - run:
          name: Build psycopg Lambda Layer
          command: |
            mkdir -p python
            python3 -m pip install --platform manylinux2014_x86_64 \
                --target=package \
                --implementation cp \
                --python-version 3.10 \
                --only-binary=:all: \
                --upgrade \
                "psycopg[binary]" -t $(ARTIFACTS_DIR)/python
                # --no-deps  # ✅ Ignore unnecessary dependencies like backports.zoneinfo
            # ✅ Copy libpq to the layer
            mkdir -p lib
            cp /usr/lib64/libpq.so* lib/

            # # ✅ Verify structure
            ls -lh python/
            ls -lh lib/

      - run:
          name: Package Lambda Layer
          command: zip -r psycopg-layer.zip python lib

      - persist_to_workspace:
          root: .
          paths:
            - psycopg-layer.zip  # Store the zip file for Terraform

  terraform-deploy:
    docker:
      - image: hashicorp/terraform:latest  # Use Terraform's official image

    environment:
      AWS_REGION: "us-west-2"  # Ensure the region is set

    steps:
      - checkout  # Checkout the code

      - attach_workspace:
          at: .

      - run:
          name: Set AWS Credentials
          command: |
            export AWS_ACCESS_KEY_ID="${AWS_ACCESS_KEY_ID}"
            export AWS_SECRET_ACCESS_KEY="${AWS_SECRET_ACCESS_KEY}"
            export AWS_REGION="us-west-2"

      - run:
          name: Terraform Init
          command: terraform init

      - run:
          name: Terraform Plan
          command: terraform plan -out=tfplan

      - run:
          name: Terraform Apply
          command: terraform apply -auto-approve tfplan

workflows:
  build-and-deploy:
    jobs:
      - build-pg8000-layer
      - build-psycopg-layer
      - terraform-deploy:
          requires:
            - build-pg8000-layer
            - build-psycopg-layer  # Terraform runs only after both Lambda Layers are built
